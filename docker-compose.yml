version: '3'

services:
  # Api service
  api.musicprogress:
    image: music-backend
    build:
      context: .
      dockerfile: AudioStorage/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: true
      AllowedHost: https://audio-storage.ru
      JwtSettings__SecretKey: 'B5KiM8qRpxPVGiLAvGo9JsBrVh7R2YnB5KiM8qRpxPVGiLAvGo9JsBrVh7R2Yn'
      JwtSettings__LifeSpan: 3600
      JwtSettings__RefreshTokenLifeSpan: 30
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_USER: 'user'
      DB_PASSWORD: '3gsWZeDs#%T*NfPkh4'
      DB_NAME: 'audio-storage'
      MinIOSettings__Host: minio-storage
      MinIOSettings__Port: 9000
      MinIOSettings__AccessKey: SuoviT!bZSs@D8RwkrfBDersy7@DJ$
      MinIOSettings__SecretKey: SuoviT!bZSs@D8RwkrfBDersy7@DJ$
      MinIOSettings__BucketName: audio
      MinIOSettings__ContentType: 'audio/ogg; codecs=opus;'
    depends_on:
      - mysql-server
      - minio-storage

  # Database service
  mysql-server:
    image: mysql/mysql-server:8.0.32
    environment:
      MYSQL_DATABASE: 'audio-storage'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: '3gsWZeDs#%T*NfPkh4'
      MYSQL_ROOT_PASSWORD: Favekj3A8@yRkhQUo%
    volumes:
      - ./initsql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
  
  # Nginx proxy
  nginx-proxy:
    image: react-client
    build: 
      context: ../audio-storage-client/
      args:
        REACT_APP_SERVER_API: https://audio-storage.ru
    ports:
      - "80:80"
    depends_on:
      - api.musicprogress
  
  minio-storage:
    image: minio/minio
    command: server ~/data --address ":9000" --console-address ":9090"
    ports:
      - "9090:9090"
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: SuoviT!bZSs@D8RwkrfBDersy7@DJ$
      MINIO_ROOT_PASSWORD: SuoviT!bZSs@D8RwkrfBDersy7@DJ$